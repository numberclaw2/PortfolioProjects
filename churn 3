CREATE MULTISET VOLATILE TABLE v_lag_one_month
AS
(
SELECT
    CASE 
        WHEN Current_Date = Td_Month_End(Current_Date) THEN Add_Months(Td_Month_Begin(Current_Date), -1)
        ELSE Add_Months(Current_Date, -2)
    END AS Begin_dt,
    CASE 
        WHEN Current_Date = Td_Month_End(Current_Date) THEN Td_Month_End(Add_Months(Current_Date, -1))
        ELSE Add_Months(Current_Date, -1) - INTERVAL '1' DAY
    END AS End_dt,
    Add_Months(Current_Date - Extract(DAY From Current_Date) + 1, -2) AS pm_Begin_dt,
    Td_Month_End(Add_Months(Current_Date - Extract(DAY From Current_Date) + 1, -2)) AS pm_end_dt,
    Td_Month_Begin(Current_Date) AS rpt_mth,
    Add_Months(Td_Month_Begin(Current_Date), -1) AS pm_rpt_mth
) WITH DATA 
PRIMARY INDEX (Begin_dt, End_dt) 
ON COMMIT PRESERVE ROWS;

SEL * FROM v_lag_one_month;

CREATE MULTISET VOLATILE TABLE NEW_LINES_CARE, NO Log
AS
(
SELECT DISTINCT
    a.vsn_cust_type_cd,
    a.cust_id,
    a.acct_num,
    a.cust_line_seq_id,
    a.line_act_dt,
    a.line_term_dt,
    b.USER_ID,
    a.DEACT_CHANGE_REAS_CD AS DEACT_CD,
    e.CHANGE_REAS_DESC AS DEACT_DESC,
    a.cntrct_eff_dt,
    a.prepaid_ind,
    a.MTN_STATUS_IND,
    a.mtn,
    a.PPLAN_EFF_DT,
    a.esn_change_reas_cd,
    a.esn_change_dt,
    COALESCE(a.eqp_device_id, a.esn_num) AS ESN_NUM,
    CASE 
        WHEN a.eqp_device_id IS NOT NULL THEN Substr(a.eqp_device_id, 1, 14) 
        ELSE a.ESN_NUM 
    END AS TRIM_ESN_NUM,
    CASE 
        WHEN a.prod_nm LIKE '%sim%' THEN a.esn_num 
        ELSE NULL 
    END AS SIM_NUM,
    c.tier,
    COALESCE(a.device_prod_nm, a.prod_nm) AS PROD_NM,
    a.SLS_PRSN_ID,
    d.sls_prsn_nm,
    d.emp_id,
    f.LINE_IN_SVC_CNT,
    f.ACCT_TERM_DT,
    f.ACCT_STATUS_IND,
    CASE 
        WHEN a.LINE_TERM_DT IS NOT NULL AND a.LINE_TERM_DT - a.LINE_ACT_DT < 31 THEN 1 
        ELSE 0 
    END AS WFG_DISCO,
    CASE 
        WHEN c.DEVICE_BRAND_NM = 'VZ INTERNET GATEWAY' THEN 1 
        ELSE 0 
    END AS FWA_IND
FROM NTL_PRD_ALLVM.CUST_ACCT_LINE_V AS a
JOIN (
    -- Care Rep's activated lines
    SELECT DISTINCT 
        DLA.CUST_ID,
        DLA.CUST_LINE_SEQ_ID,
        DLA.ACCT_NUM,
        DLA.MTN,
        DLA.USER_ID
    FROM NTL_PRD_ALLVM.DLA_SUM_FACT_V AS DLA
    INNER JOIN NTL_PRD_QMVM.HQCS_EMP_HIST_V AS ESH
        ON DLA.USER_ID = ESH.NETWORKID
        AND DLA.ACTIVITY_DT BETWEEN ESH.STARTDATE AND ESH.ENDDATE
    WHERE DLA.ACTIVITY_DT >= (SELECT Begin_dt FROM v_lag_one_month)
        AND DLA.ACTIVITY_CD = 'AC'
) AS b
    ON a.CUST_ID = b.CUST_ID 
    AND a.CUST_LINE_SEQ_ID = b.CUST_LINE_SEQ_ID
LEFT OUTER JOIN ntl_prd_allvm.device_dp_map_v AS c
    ON COALESCE(a.device_prod_nm, a.prod_nm) = c.prod_nm
LEFT OUTER JOIN ntl_prd_allvm.sales_person_v AS d
    ON a.sls_prsn_id = d.sls_prsn_id AND d.sor_id = 'v'
LEFT OUTER JOIN CHANGE_REASON_V AS e
    ON a.DEACT_CHANGE_REAS_CD = e.CHANGE_REAS_CD AND e.SOR_ID = 'v'
INNER JOIN CUST_ACCT_V AS f
    ON a.CUST_ID = f.CUST_ID AND a.ACCT_NUM = f.ACCT_NUM
WHERE a.line_act_dt BETWEEN (SELECT Begin_dt FROM v_lag_one_month) AND (SELECT End_dt FROM v_lag_one_month)
    AND a.prepaid_ind = 'n' -- All post-paid activations
    AND a.REV_GEN_IND = 'Y' -- Demos excluded
    AND f.LINE_IN_SVC_CNT <> 0 -- No inactive customer accounts with zero lines
) WITH DATA 
PRIMARY INDEX (cust_id, cust_line_seq_id) 
ON COMMIT PRESERVE ROWS;

CREATE MULTISET VOLATILE TABLE REACT_SCRUB_CARE, NO Log
AS
(
SELECT
    a.*
FROM NEW_LINES_CARE AS A
LEFT OUTER JOIN DLY_LINE_ACTIVITY_V AS B
    ON a.CUST_ID = b.CUST_ID
    AND a.LINE_ACT_DT = b.ACTIVITY_DT
    AND a.CUST_LINE_SEQ_ID = b.CUST_LINE_SEQ_ID
    AND b.ACTIVITY_CD = 'RE'
WHERE b.CUST_ID || '-' || b.CUST_LINE_SEQ_ID IS NULL -- Reactivations are scrubbed
    AND a.WFG_DISCO = 0 -- New lines disconnected before 30 days don't count toward false churn
    AND a.FWA_IND = 0
)
WITH DATA 
PRIMARY INDEX (CUST_ID)
ON COMMIT PRESERVE ROWS;

CREATE MULTISET VOLATILE TABLE NEW_LINES2_CARE, NO Log
AS
(
SELECT DISTINCT A.*
    ,A.LINE_TERM_DT - A.LINE_ACT_DT AS DAYS_ACTIVE
    ,C.nm_first || ' ' || C.nm_last AS NETACE_USER_NM
    ,B.netace_user_id
    ,B.invc_num
    ,B.PYMNT_DT
    ,CASE 
        WHEN B.SLS_TYPE = 'S' AND (B.ITEM_CD LIKE '%SIM%') THEN 1 
        ELSE 0 
    END AS SIM_ONLY_ACT_IND
    ,CASE 
        WHEN (POSITION('-E ' IN A.PROD_NM) > 0 OR POSITION('-2 ' IN A.PROD_NM) > 0) THEN 1 
        ELSE 0 
    END AS ESIM_IND
FROM REACT_SCRUB_CARE AS A
LEFT OUTER JOIN POS_TRANS_V AS B
    ON A.CUST_ID = B.CUST_ID
    AND A.CUST_LINE_SEQ_ID = B.CUST_LINE_SEQ_ID
    AND B.ORDER_TYPE = 'PS'
    AND B.SLS_TYPE IN ('P', 'S')
    AND A.LINE_ACT_DT = B.PYMNT_DT
LEFT JOIN NTL_PRD_ALLVM.hr_employee_hist_v AS C
    ON B.netace_user_id = C.NT_USER_ID 
    AND B.PYMNT_DT BETWEEN C.EFF_DT AND C.EXP_DT
LEFT JOIN ntl_prd_allvm.sales_person_v AS D
    ON C.EMP_ID = D.EMP_ID
QUALIFY ROW_NUMBER() OVER (PARTITION BY A.CUST_ID, A.CUST_LINE_SEQ_ID ORDER BY A.LINE_ACT_DT DESC) = 1
)
WITH DATA
PRIMARY INDEX (cust_id, cust_line_seq_id)
ON COMMIT PRESERVE ROWS;

CREATE MULTISET VOLATILE TABLE DISCO, NO Log
AS
(
SELECT DISTINCT
    a.vsn_cust_type_cd,
    c.prod_nm AS Deact_Prod_Nm,
    a.cust_id,
    a.acct_num,
    a.cust_line_seq_id,
    a.line_act_dt,
    a.line_term_dt,
    b.user_id,
    a.DEACT_CHANGE_REAS_CD AS DEACT_CD,
    e.CHANGE_REAS_DESC AS DEACT_DESC,
    a.cntrct_eff_dt,
    a.prepaid_ind,
    a.MTN_STATUS_IND,
    a.mtn,
    a.PPLAN_EFF_DT,
    a.esn_change_reas_cd,
    a.esn_change_dt,
    b.NETACE_USER_NM,
    COALESCE(a.eqp_device_id, a.esn_num) AS ESN_NUM,
    CASE 
        WHEN a.eqp_device_id IS NOT NULL THEN Substr(a.eqp_device_id, 1, 14) 
        ELSE a.ESN_NUM 
    END AS TRIM_ESN_NUM,
    CASE 
        WHEN a.prod_nm LIKE '%sim%' THEN a.esn_num 
        ELSE NULL 
    END AS SIM_NUM,
    COALESCE(a.device_prod_nm, a.prod_nm) AS PROD_NM,
    c.TIER,
    f.NT_USER_ID AS Disc_NT_User_ID,
    f.NM_FIRST || ' ' || f.NM_LAST AS Disc_NT_User_NM,
    f.DEPT_DESC AS Disc_NT_User_Dept,
    CASE 
        WHEN a.LINE_TERM_DT IS NOT NULL AND a.LINE_TERM_DT - a.LINE_ACT_DT < 31 THEN 1 
        ELSE 0 
    END AS WFG_DISCO,
    CASE 
        WHEN c.DEVICE_BRAND_NM = 'VZ INTERNET GATEWAY' THEN 1 
        ELSE 0 
    END AS FWA_IND,
    a.line_term_dt - b.LINE_ACT_DT AS DAYS_BETWEEN
FROM NTL_PRD_ALLVM.CUST_ACCT_LINE_V AS a
INNER JOIN NEW_LINES2_CARE AS b
    ON a.CUST_ID = b.CUST_ID
    AND a.cust_line_seq_id <> b.cust_line_seq_id
LEFT OUTER JOIN ntl_prd_allvm.device_dp_map_v AS c
    ON COALESCE(a.device_prod_nm, a.prod_nm) = c.prod_nm
LEFT JOIN ntl_prd_allvm.hr_employee_hist_v AS f
    ON f.emp_id = b.NETACE_USER_ID
    AND a.line_term_dt BETWEEN f.EFF_DT AND f.EXP_DT
INNER JOIN CHANGE_REASON_V AS e
    ON a.DEACT_CHANGE_REAS_CD = e.CHANGE_REAS_CD
    AND e.SOR_ID = 'v'
WHERE 
    a.MTN_STATUS_IND = 'd'
    AND a.line_term_dt BETWEEN b.line_act_dT AND b.line_act_dT + INTERVAL '30' DAY
    AND a.DEACT_CHANGE_REAS_CD NOT IN ('91', '90', '36', 'PF', '41', '35', 'TC', 'FI', 'PP') -- Exclusions
    AND (NOT(a.LINE_TERM_DT - a.LINE_ACT_DT < 31) OR a.LINE_TERM_DT IS NULL)
    AND c.DEVICE_BRAND_NM <> 'VZ INTERNET GATEWAY'
)
WITH DATA
PRIMARY INDEX (cust_id, cust_line_seq_id)
ON COMMIT PRESERVE ROWS;

CREATE MULTISET VOLATILE TABLE DISCO3, NO Log
AS
(
SELECT DISTINCT
    a.VSN_CUST_TYPE_CD,
    a.CUST_ID,
    a.ACCT_NUM,
    a.CUST_LINE_SEQ_ID,
    a.LINE_ACT_DT,
    a.LINE_TERM_DT,
    a.DEACT_CD,
    a.DEACT_DESC,
    a.MTN_STATUS_IND,
    a.MTN AS Disc_MTN,
    a.ESN_NUM,
    a.TRIM_ESN_NUM,
    a.SIM_NUM,
    a.PROD_NM,
    a.TIER,
    a.Disc_NT_User_ID,
    a.Disc_NT_User_NM,
    a.Disc_NT_User_Dept,
    CASE 
        WHEN a.CUST_ID IS NOT NULL THEN 1 
        ELSE 0 
    END AS LINES_LOST_IND,
    b.TOT_LINES_LOST
FROM DISCO AS a
INNER JOIN (
    SELECT
        line_term_dt,
        cust_id,
        acct_num,
        COUNT(DISTINCT MTN) AS TOT_LINES_LOST
    FROM DISCO
    GROUP BY 1, 2, 3
) AS b
    ON a.cust_id = b.cust_id 
    AND a.acct_num = b.acct_num 
    AND a.line_term_dt = b.line_term_dt
)
WITH DATA
PRIMARY INDEX (cust_id, cust_line_seq_id)
ON COMMIT PRESERVE ROWS;

CREATE MULTISET VOLATILE TABLE BLEND_Detail_CARE, NO Log
AS
(
SELECT
    Td_Month_Begin(Current_Date) AS rpt_mth,
    b.New_Act_MTN,
    a.VSN_CUST_TYPE_CD,
    a.CUST_ID,
    a.ACCT_NUM,
    a.CUST_LINE_SEQ_ID,
    b.LINE_ACT_DT,
    a.LINE_TERM_DT,
    b.USER_ID,
    a.DEACT_CD,
    a.DEACT_DESC,
    a.MTN_STATUS_IND,
    a.Disc_MTN,
    a.ESN_NUM,
    a.TRIM_ESN_NUM,
    a.SIM_NUM,
    a.PROD_NM,
    a.TIER,
    a.Disc_NT_User_ID,
    a.Disc_NT_User_NM,
    a.Disc_NT_User_Dept
FROM (
    SELECT DISTINCT
        CUST_ID,
        ACCT_NUM,
        MTN AS New_Act_MTN,
        LINE_ACT_DT,
        ROW_NUMBER() OVER (PARTITION BY MTN ORDER BY LINE_ACT_DT DESC) AS Row_Num
    FROM NEW_LINES2_CARE
) AS b
JOIN DISCO3 AS a
    ON a.CUST_ID = b.CUST_ID 
    AND a.ACCT_NUM = b.ACCT_NUM
WHERE b.Row_Num = 1
AND a.LINE_TERM_DT BETWEEN b.LINE_ACT_DT AND b.LINE_ACT_DT + INTERVAL '30' DAY
AND a.VSN_CUST_TYPE_CD IN ('PE', 'ME')
)
WITH DATA
PRIMARY INDEX (cust_id, ACCT_NUM, CUST_LINE_SEQ_ID)
ON COMMIT PRESERVE ROWS;

SEL 
    HR.Channel,
    HR.Bus_Sgmnt_Desc,
    HR.Job_Desc,
    HR.Loc_Desc,
    HR.CENTER_TYPE AS CENTER_TYPE,
    HR.USER_ID,
    HR.EMP_ID,
    HR.Emp_Nm AS EMP_NM,
    HR.Supv_Lvl1_Emp_Nm AS EMP_SUP,
    HR.Supv_Lvl2_Emp_Nm AS EMP_MGR,
    HR.Supv_Lvl3_Emp_Nm AS EMP_DIR,
    HR.Supv_Lvl4_Emp_Nm AS EMP_VP,
    A.*
FROM BLEND_Detail_CARE AS A
JOIN NTL_PRD_QMTBLS.RMC_CARE_REP_MAPPING_HIST AS HR                         
    ON HR.USER_ID = A.USER_ID    
    AND A.LINE_ACT_DT BETWEEN HR.EFF_DT AND HR.EXP_DT
WHERE VSN_CUST_TYPE_CD IN ('PE', 'ME')
ORDER BY CUST_ID;